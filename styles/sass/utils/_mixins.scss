

@mixin flexbox($direction,$content: normal,$justify: normal,$items: normal,$wrap: wrap,$display: flex) {
  flex-direction: $direction;
  align-content: $content;
  justify-content: $justify;
  align-items: $items;
  flex-wrap: $wrap;
  display: $display;
}

@mixin marginPadding($m-direction:$allDirections, $m-amount:0, $p-direction:$allDirections, $p-amount:0) {
  @if $m-direction == $allDirections {
    margin: $m-amount;
  } @else if $m-direction == $specificDirections {
    margin: $m-amount;
  }
  @if $p-direction == $allDirections {
    padding: $p-amount;
  } @else if $p-direction == $specificDirections {
    padding: $p-amount;
  }
}

@mixin borderRadiusTop($size) {
  border-top-left-radius: $size;
  border-top-right-radius: $size;
}

@mixin borderRadiusBottom($size) {
  border-bottom-left-radius: $size;
  border-bottom-right-radius: $size;
}

@mixin font($style: normal, $weight: normal, $size: 1em, $line-height: 1, $font-family: Roboto) {
  font-style: $style;
  font-weight: $weight;
  font-size: $size;
  line-height: $line-height;
  font-family: $font-family;
}

@mixin widthHeight($w, $h: auto) {
  width: $w;
  height: $h;
}

@mixin positionElement($top:0em, $right:0em, $bottom:0em, $left:0em, $position:unset) {
  @if $top != 0em {
    top: $top;
  }
  @if $right != 0em {
    right: $right;
  }
  @if $bottom != 0em {
    bottom: $bottom;
  }
  @if $left != 0em {
    left: $left;
  }
  position:$position;
}

/*Ajuste la couleur du texte par rapport à la luminosité du background*/
@mixin backgroundAuto($bgColor) {

  @if lightness($bgColor) > 50% {
    background-color: $bgColor;
    color: black;
    a {color: black;}

  } @else {
    background-color: $bgColor;
    color: white;
    a {color: white;}
  }
}

//Utilisation dans les media queries

@mixin responsiveContentCentered {
  max-width: 1440px;
  margin: auto;
}
